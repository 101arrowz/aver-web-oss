{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2021,
    "sourceType": "module",
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "extends": [
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier/@typescript-eslint",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "@typescript-eslint/array-type": ["error", {
      "array": "array-simple"
    }],
    "@typescript-eslint/ban-ts-comment": ["error", {
      "ts-expect-error": "allow-with-description",
      "ts-ignore": "allow-with-description",
      "minimumDescriptionLength": 10
    }],
    "@typescript-eslint/ban-tslint-comment": "error",
    "@typescript-eslint/consistent-indexed-object-style": [
      "error",
      "record"
    ],
    "@typescript-eslint/consistent-type-assertions": ["error", {
      "assertionStyle": "as",
      "objectLiteralTypeAssertions": "allow-as-parameter"
    }],
    "@typescript-eslint/consistent-type-imports": ["error", {
      "prefer": "no-type-imports",
      "disallowTypeAnnotations": true
    }],
    "default-param-last": "off",
    "@typescript-eslint/default-param-last": "error",
    "dot-notation": "off",
    "@typescript-eslint/dot-notation": ["error", {
      "allowKeywords": false,
      "allowPattern": "^[a-zA-Z0-9]+(_[a-zA-Z0-9]+)+$",
      "allowPrivateClassPropertyAccess": true,
      "allowProtectedClassPropertyAccess": true
    }],
    "@typescript-eslint/explicit-member-accessibility": ["error", {
      "accessibility": "no-public"
    }],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "lines-between-class-members": "off",
    "@typescript-eslint/lines-between-class-members": ["error", {
      "exceptAfterSingleLine": true
    }],
    "@typescript-eslint/member-ordering": ["warn", {
      "default": {
        "memberTypes": [
          "private-static-field",
          "protected-static-field",
          "public-static-field",
          "private-abstract-field",
          "protected-abstract-field",
          "public-abstract-field",
          "private-decorated-field",
          "protected-decorated-field",
          "public-decorated-field",
          "private-instance-field",
          "protected-instance-field",
          "public-instance-field",
          "signature",
          "private-constructor",
          "protected-constructor",
          "public-constructor",
          "private-static-method",
          "protected-static-method",
          "public-static-method",
          "private-abstract-method",
          "protected-abstract-method",
          "public-abstract-method",
          "private-decorated-method",
          "protected-decorated-method",
          "public-decorated-method",
          "private-instance-method",
          "protected-instance-method",
          "public-instance-method"
        ],
        "order": "as-written"
      },
      "interfaces": {
        "memberTypes": ["constructor", "method", "field", "signature"],
        "order": "as-written"
      },
      "typeLiterals": {
        "memberTypes": ["constructor", "method", "field", "signature"],
        "order": "as-written"
      }
    }],
    "@typescript-eslint/method-signature-style": "warn",
    "@typescript-eslint/naming-convention": ["error", {
      "selector": "default",
      "format": ["camelCase"],
      "leadingUnderscore": "forbid",
      "trailingUnderscore": "forbid"
    }, {
      "selector": "variable",
      "types": ["function"],
      "format": ["camelCase", "PascalCase"]
    }, {
      "selector": "variable",
      "modifiers": ["const"],
      "format": ["camelCase", "UPPER_CASE"]
    }, {
      "selector": "classProperty",
      "modifiers": ["static", "readonly"],
      "format": ["UPPER_CASE"]
    }, {
      "selector": ["typeLike", "enumMember"],
      "format": ["PascalCase"],
      "custom": {
        "regex": "^[A-Z][A-Z][a-z0-9]",
        "match": false
      }
    }],
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-confusing-void-expression": ["error", {
      "ignoreArrowShorthand": true
    }],
    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": "error",
    "no-duplicate-imports": "off",
    "@typescript-eslint/no-duplicate-imports": "error",
    "@typescript-eslint/no-dynamic-delete": "error",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-empty-interface": ["error", {
      "allowSingleExtends": true
    }],
    "@typescript-eslint/no-explicit-any": ["error", {
      "fixToUnknown": true
    }],
    "@typescript-eslint/no-extraneous-class": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "no-invalid-this": "off",
    "@typescript-eslint/no-invalid-this": "error",
    "no-loop-func": "off",
    "@typescript-eslint/no-loop-func": "error",
    "no-loss-of-precision": "off",
    "@typescript-eslint/no-loss-of-precision": "error",
    "no-magic-numbers": "off",
    "@typescript-eslint/no-namespace": ["error", {
      "allowDeclarations": true
    }],
    "@typescript-eslint/no-non-null-assertion": "off",
    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": "error",
    "@typescript-eslint/no-require-imports": "warn",
    "@typescript-eslint/no-shadow": ["warn", {
      "hoist": "never",
      "ignoreFunctionTypeParameterNameValueShadow": true
    }],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": ["error", {
      "allowConstantLoopConditions": true
    }],
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/no-unsafe-call": "warn",
    "@typescript-eslint/no-unsafe-member-access": "warn",
    "@typescript-eslint/no-unsafe-return": "warn",
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": "warn",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "warn",
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/non-nullable-type-assertion-style": "error",
    "@typescript-eslint/prefer-as-const": "warn",
    "@typescript-eslint/prefer-literal-enum-member": "warn",
    "@typescript-eslint/prefer-optional-chain": "warn",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/prefer-ts-expect-error": "warn",
    "@typescript-eslint/require-array-sort-compare": "warn",
    "no-return-await": "off",
    "@typescript-eslint/return-await": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "warn",
    "@typescript-eslint/triple-slash-reference": ["error", {
      "path": "never",
      "types": "prefer-import",
      "lib": "always"
    }],
    "@typescript-eslint/unbound-method": "warn",
    "react/react-in-jsx-scope": "off"
  }
}